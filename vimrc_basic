""""""""""""""""""""""""""""""""
"""""""""" Basic Mode """"""""""
""""""""""""""""""""""""""""""""

set encoding=utf-8
filetype off
set clipboard=unnamedplus " Set desktop clipboard

"""""""""
" Spacing
"""""""""

set tabstop=4     " visual spaces for TAB character
set softtabstop=4 " number of spaces in tab for editing
set expandtab     " insert spaces instead of TAB character
set shiftwidth=4  " number of spaces to introduce on return for control structures, functions, etc

"""""""""""""""""
" Language syntax
"""""""""""""""""

syntax enable

""""
" UI
""""

colorscheme darkblue
highlight ExtraWhitespace ctermbg=red
set number
set cursorline
set showcmd
set laststatus=2
set statusline=
set statusline+=%-3.3n\                      " buffer number
set statusline+=%f\                          " file name
set statusline+=%h%m%r%w                     " flags
set statusline+=\[%{strlen(&ft)?&ft:'none'}, " filetype
set statusline+=%{&encoding},                " encoding
set statusline+=%{&fileformat}]              " file format
set statusline+=%=                           " right align
set statusline+=0x%-8B\                      " current char
set statusline+=%-10.(%l,%c%V%)\ %<%P        " offset
highlight StatusLine ctermbg=3 ctermfg=10
highlight CursorLine ctermbg=darkgrey
highlight LineNr ctermbg=darkgrey ctermfg=white


set splitbelow
set splitright

set guifont=Neep\ 18


syntax on

""""""""
" Python
""""""""

""""""""""""""""""
" PEP8 indentation
""""""""""""""""""
au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

let g:python_highlight_all=1


""""""""""
" HTML, JS
""""""""""
au BufNewFile,BufRead *.html,*.twig,*.vue,*.js
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2 |
    \ set autoindent |
    \ set fileformat=unix


"""""""""""""""""
" Functionalities
"""""""""""""""""
set foldmethod=indent
set foldlevel=99

"""""""""""""""""
" Mappings
"""""""""""""""""

let g:mapleader = "\<Space>"

" Copy to clipboard
vnoremap <Leader>c :%y<cr>

" Return from insert mode to normal mode
inoremap jk <Esc>

" Buffer navigation
set hidden
nnoremap <C-N> :bnext<cr>
nnoremap <C-P> :bprev<cr>

" Split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
nnoremap <Up> :resize +2<cr>
nnoremap <Down> :resize -2<cr>
nnoremap <Left> :vertical resize +2<cr>
nnoremap <Right> :vertical resize -2<cr>

" Fast save and exit
nnoremap <Leader>w :w<cr>
nnoremap <Leader>W :wa<cr>
nnoremap <Leader>q :q<cr>
nnoremap <Leader>Q :qa<cr>
nnoremap <Leader>! :qa!<cr>
nnoremap <Leader>r :e!<cr>
nnoremap <Leader>d :bprev\|bd #<cr>

" Insert new line below, usefull for if, for, etc. statements
inoremap <C-Space> <Esc>o

" Source vimrc
nnoremap <Leader>sv :source $MYVIMRC<cr>

" Disable old keys to force myself to use mappings
"nnoremap :w <Nop>
"nnoremap :wa <Nop>
"nnoremap :q <Nop>
"nnoremap :qa <Nop>
"nnoremap :bd <Nop>
"inoremap <Esc> <Nop>
"inoremap <Up> <Nop>
"inoremap <Down> <Nop>
"inoremap <Left> <Nop>
"inoremap <Right> <Nop>


""""""""""""""
" Autocommands
""""""""""""""
augroup set_filetypes
    autocmd!
    autocmd BufRead *.wsgi set syntax=python filetype=python
    autocmd BufRead *.twig set syntax=html filetype=html
augroup END

augroup python_abbreviations
    autocmd!
    autocmd FileType python :inoreabbrev <buffer> i if:<Left>
    autocmd FileType python :inoreabbrev <buffer> eli elif:<Left>
    autocmd FileType python :inoreabbrev <buffer> el else:<cr><Space><BS><BS>
    autocmd FileType python :inoreabbrev <buffer> f for:<Left>
    autocmd FileType python :inoreabbrev <buffer> w while:<Left>
    autocmd FileType python :inoreabbrev <buffer> d def():<Esc>
    autocmd FileType python :inoreabbrev <buffer> re return
    autocmd FileType python :inoreabbrev <buffer> t try:<cr>except:<Esc>ko<Space><BS><BS>
    autocmd FileType python :inoreabbrev <buffer> tr True
    autocmd FileType python :inoreabbrev <buffer> fa False
    autocmd FileType python :inoreabbrev <buffer> br break
    autocmd FileType python :inoreabbrev <buffer> co continue
augroup END

augroup php_abbreviations
    autocmd!
    autocmd FileType php :inoreabbrev <buffer> i if () {<cr>}<Esc>k2ei
    autocmd FileType php :inoreabbrev <buffer> eli else if () {<cr>}<Esc>k3ei
    autocmd FileType php :inoreabbrev <buffer> el else {<cr>}<Esc>ko<Space><BS><BS>
    autocmd FileType php :inoreabbrev <buffer> f for () {<cr>}<Esc>k2ei
    autocmd FileType php :inoreabbrev <buffer> w while () {<cr>}<Esc>k2ei
    autocmd FileType php :inoreabbrev <buffer> fu function()<cr>{<cr>}<Esc>2kwi
    autocmd FileType php :inoreabbrev <buffer> re return
    autocmd FileType php :inoreabbrev <buffer> t try {<cr>} catch () {<cr>}<Esc>2ko<Space><BS><BS>
    autocmd FileType php :inoreabbrev <buffer> tr true
    autocmd FileType php :inoreabbrev <buffer> fa false
    autocmd FileType php :inoreabbrev <buffer> br break
    autocmd FileType php :inoreabbrev <buffer> co continue
augroup END

augroup javascript_abbreviations
    autocmd!
    autocmd FileType javascript :inoreabbrev <buffer> i if () {<cr>}<Esc>k2ei
    autocmd FileType javascript :inoreabbrev <buffer> eli else if () {<cr>}<Esc>k3ei
    autocmd FileType javascript :inoreabbrev <buffer> el else {<cr>}<Esc>ko<Space><BS><BS>
    autocmd FileType javascript :inoreabbrev <buffer> f for () {<cr>}<Esc>k2ei
    autocmd FileType javascript :inoreabbrev <buffer> w while () {<cr>}<Esc>k2ei
    autocmd FileType javascript :inoreabbrev <buffer> fu function() {<cr>}<Esc>kwi
    autocmd FileType javascript :inoreabbrev <buffer> re return
    autocmd FileType javascript :inoreabbrev <buffer> t try {<cr>} catch () {<cr>}<Esc>2ko<Space><BS><BS>
    autocmd FileType javascript :inoreabbrev <buffer> tr true
    autocmd FileType javascript :inoreabbrev <buffer> fa false
    autocmd FileType javascript :inoreabbrev <buffer> br break
    autocmd FileType javascript :inoreabbrev <buffer> co continue
augroup END


"""""""""""
" Searching
"""""""""""

set incsearch " search as characters are entered.
set hlsearch  " highlight matches
set ignorecase

""""""""
" Styles
""""""""

" Show trailing whitespaces.
highlight ExtraWhitespace ctermbg=red
match ExtraWhitespace /\s\+$\| \+\ze\t/
